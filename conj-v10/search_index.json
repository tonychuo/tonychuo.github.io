[
["index.html", "聯合分析與行銷策略 前言 課程需求 與 課前準備 聯合分析簡介 課程內容簡介", " 聯合分析與行銷策略 Marketing Strategies by Conjoint Analysis Tony Chuo, tonychuo@gmail.com 2016-10-18 前言 數據分析是現代經理人需要具備的職能，我們不只要會用數據來建模型，更要會使用模型來制訂策略。 在這個Workshop裡面，我們教大家： 使用 R 語言 來建 聯合分析 (Conjoint Anlaysis)模型 使用聯合分析模型來進行 市場模擬 (Market Simulation) 實際操作 市場區隔 、 產品設計 與 產品線規劃 並練習在各種市場情境之下制訂 價格策略 與 競爭策略 課程需求 與 課前準備 課前我們會提供程式和資料，讓大家上課時在自己的電腦上做市場模擬和策略規劃。所以，還沒用過R和RStudio的同學，請在上課之前先到以下網址，自行下載、安裝這兩項免費軟體： R-3.3.1 for Windows &amp; Rstudio for Windows Vista/7/8/10 R-3.3.1 for Mac OS X &amp; Rstudio for Mac OS X 這不是R語言的簡介課程，同學並不需要會寫程式，但是需要具備一些在R的環境下做基本運算的能力。 如果你完全沒用過R，請你看一下 R 語言導論 這個簡短的免費線上課程，它可以很快的幫助你學會R的基本操作。 此外，上課時我們會使用到一些R Packages，上課之前請大家先用以下的指令將它們裝好： install.packages(&quot;conjoint&quot;) install.packages(&quot;fpc&quot;) install.packages(&quot;grDevices&quot;) install.packages(&quot;latex2exp&quot;) install.packages(&quot;manipulate&quot;) install.packages(&quot;rAmCharts&quot;) install.packages(&quot;highcharter&quot;) install.packages(&quot;doParallel&quot;) install.packages(&quot;foreach&quot;) 上課時請攜帶自己的電腦，並儘量裝好上述軟體。 聯合分析簡介 聯合分析 (Conjoint Analysis) 是一種很重要的市場調查工具， 它基本上分成幾個步驟，每一個步驟都有幾種不同的做法: 卡片設計： 屬性(Attribute) 選項(Levels) 卡片 (Profiles) 實驗方法： Full-Profile: Sorting &amp; Rating Choice Based Conjoint (CBC) Adaptive CBC (ACBC) 分析模型： Linear regression Multinominal logit Hierarchical, mixed-effect model Hierarchical bayesian model 其中每一種做法都有相對應的 R package， Chapman &amp; Feit (2015) 這本新書裡面有以上各種模型的介紹和簡單的案例實作。 由於整體程序相當繁複，實務上通常會採用專門的整合式的工具軟體， 如SawTooth Software， 來做聯合分析。在這裡我們的重點擺在聯合分析在行銷策略上面的應用， 至於聯合分析的簡介，請自行參考下列教學影片： What is Conjoint Analysis? What can Conjoint Analysis do for you? Beginner’s Guide for Choose based Conjoint (CBC)? 或者參考 Applied conjoint analysis (Rao 2014)， 同學可以到圖書館網站下載這本書。 課程內容簡介 以下，我們首先練習使用 R 和簡單的線性模型來做 聯合分析 : The conjoint package Estimate attribute importance 估計各屬性的重要性 Estimate part worths 估計各選項的平均價值 Individual’s utility coefficients 估計各選項對個人的價值 然後我們利用聯合分析的結果來制定各種 行銷策略 ，包括： 市場區隔 (Segmentation): Clustering Dimension reduction Segmentation Segment characteristics Target selection 產品設計 (Product Design) 和 訂價策略 (Pricing Strategy): Distribution of utility Demand curve Price optimization 產品線規劃 (Product Line Planning): Design multiple products Penertration versus cannnibalize Multiple prices optimization 競爭策略 (Competitive Strategy): Competitive markets (1 or more competitors) Estimate market share (logit model) The IIA principle Segment inflation Optimize market share, revenue or profit "],
["conjoint.html", "1 聯合分析 1.1 案例資料 1.2 屬性的重要性 1.3 選項的平均價值 (APW) 1.4 受測群體的平均喜好 1.5 個人的喜好差異 1.6 效用函數 1.7 市占率", " 1 聯合分析 library(conjoint) library(fpc) library(grDevices) library(latex2exp) library(manipulate) library(rAmCharts) library(highcharter) rm(list=ls(all=TRUE)) options(digits=4); par0 = par(cex=0.8) 1.1 案例資料 這是一個茶包的產品設計案例，在這個品項的4個主要 屬性(Attribute) 裡面， bitter: low, medium, high veriety: black, green, red kind: bag, granu, lefty aroma: yes, no 一共有11個 選項(Levels) ： levels = read.csv(&quot;../tea/levels.csv&quot;,stringsAsFactors=F) levels ## levels ## 1 low ## 2 medium ## 3 high ## 4 black ## 5 green ## 6 red ## 7 bags ## 8 granu ## 9 leafy ## 10 yes ## 11 no 從這些設計選項之中研究人員設計出13張 卡片(Profiles) ： profiles = read.csv(&quot;../tea/profiles.csv&quot;) profiles ## bitter variety kind aroma ## 1 3 1 1 1 ## 2 1 2 1 1 ## 3 2 2 2 1 ## 4 2 1 3 1 ## 5 3 3 3 1 ## 6 2 1 1 2 ## 7 3 2 1 2 ## 8 2 3 1 2 ## 9 3 1 2 2 ## 10 1 3 2 2 ## 11 1 1 3 2 ## 12 2 2 3 2 ## 13 3 2 3 2 並邀請100位 受測者(Respondents) ， 請每一個人(依不同的卡片順序)對 每一張卡片(Full-Profile) 做 評分(Rating) ratings = read.csv(&quot;../tea/ratings.csv&quot;) dim(ratings); head(ratings) ## [1] 100 13 ## prof1 prof2 prof3 prof4 prof5 prof6 prof7 prof8 prof9 prof10 prof11 prof12 prof13 ## 1 8 1 1 3 9 2 7 2 2 2 2 3 4 ## 2 0 10 3 5 1 4 8 6 2 9 7 5 2 ## 3 4 10 3 5 4 1 2 0 0 1 8 9 7 ## 4 6 7 4 9 6 3 7 4 8 5 2 10 9 ## 5 5 1 7 8 6 10 7 10 6 6 6 10 7 ## 6 10 1 1 5 1 0 0 0 0 0 0 1 1 Make some auxilary data to assist plotting col1 = c(&#39;magenta&#39;,&#39;steelblue&#39;,&#39;orange&#39;,&#39;green3&#39;,&#39;brown&#39;) (att = apply(profiles,2,max) ) ## bitter variety kind aroma ## 3 3 3 2 (attl = unlist(sapply(1:length(att), function(x) rep(x , att[x]))) ) ## [1] 1 1 1 2 2 2 3 3 3 4 4 1.2 屬性的重要性 計算各產品屬性的相對重要性 im = caImportance(y=ratings, x=profiles) names(im) = names(att) im ## bitter variety kind aroma ## 24.76 32.22 27.15 15.88 1.3 選項的平均價值 (APW) 計算各設計選項的平均價值 APW (Average Part Worth): apw = caUtilities(y=ratings, x=profiles, z=levels) ## ## Call: ## lm(formula = frml) ## ## Residuals: ## Min 1Q Median 3Q Max ## -5,189 -2,376 -0,751 2,213 7,513 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3,5534 0,0907 39,18 &lt; 2e-16 *** ## factor(x$bitter)1 0,2402 0,1325 1,81 0,07 . ## factor(x$bitter)2 -0,1431 0,1149 -1,25 0,21 ## factor(x$variety)1 0,6149 0,1149 5,35 1,0e-07 *** ## factor(x$variety)2 0,0349 0,1149 0,30 0,76 ## factor(x$kind)1 0,1369 0,1149 1,19 0,23 ## factor(x$kind)2 -0,8898 0,1325 -6,72 2,8e-11 *** ## factor(x$aroma)1 0,4108 0,0849 4,84 1,5e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0,001 &#39;**&#39; 0,01 &#39;*&#39; 0,05 &#39;.&#39; 0,1 &#39; &#39; 1 ## ## Residual standard error: 2,97 on 1292 degrees of freedom ## Multiple R-squared: 0,09, Adjusted R-squared: 0,0851 ## F-statistic: 18,3 on 7 and 1292 DF, p-value: &lt;2e-16 names(apw) = c(&#39;intercept&#39;, levels[,1]) apw ## intercept low medium high black green red bags granu ## 3.55336 0.24023 -0.14311 -0.09711 0.61489 0.03489 -0.64977 0.13689 -0.88977 ## leafy yes no ## 0.75289 0.41078 -0.41078 這看起來很像線性迴歸，不過… 你可以看出它對各屬性選項的估值，和一般線性迴歸有什麼不同嗎？ 1.4 受測群體的平均喜好 把平均的屬性重要性和選項價值畫在一起 par(mfcol=c(1,2),cex=.8) barplot(im,las=2,col=1:length(im),main=&quot;Attribute Importance&quot;) barplot(apw[2:length(apw)],las=2,col=attl,main=&quot;Average Part Worths (utils)&quot;) 跟據這些資訊，你可以設計出最受歡營的產品嗎？ 假設產品的效用可以反映消費者的願付價格，哪一個產品可以帶來最大的營收？ 帶來最大的營收的產品也會帶來最大的獲利嗎？ 除了產品規格，還有什麼因素會影響營收和獲利呢？ 1.5 個人的喜好差異 聯合分析的重點不在於 群體的平均 ，而在於 個人的差異。 聯合分析模型裡面會有每一位受測者的 選項價值係數 (part worth coef.)。 W = caPartUtilities(y=ratings, x=profiles, z=levels) head(W) ## intercept low medium high black green red bags granu leafy yes no ## [1,] 3.394 -1.517 -1.141 2.659 -0.475 -0.675 1.149 0.659 -1.517 0.859 0.629 -0.629 ## [2,] 5.049 3.391 -0.695 -2.695 -1.029 0.971 0.057 1.105 -0.609 -0.495 -0.681 0.681 ## [3,] 4.029 2.563 -1.182 -1.382 -0.248 2.352 -2.103 -0.382 -2.437 2.818 0.776 -0.776 ## [4,] 5.856 -1.149 -0.025 1.175 -0.492 1.308 -0.816 -0.825 -0.149 0.975 0.121 -0.121 ## [5,] 6.250 -2.333 2.567 -0.233 -0.033 -0.633 0.667 -0.233 -0.333 0.567 -1.250 1.250 ## [6,] 1.578 -0.713 -0.144 0.856 1.456 -0.744 -0.713 0.656 -0.713 0.056 1.595 -1.595 將產品選項的價值係數加起來就是該產品對某一受測者的價值(效用)。若產品 \\(K\\) 的規格為 \\(c(k_1,k_2,k_3,k_4)\\) ，它對受測者 \\(i\\) 的效用就是： \\[ u_{i,K} = W [i,1] + \\sum_{j=1}^4 W[i, k_j] \\] 例如，(low,black,lefty,yes)這個產品對第6位受測者的效用是： \\[ u_{6,(low,black,lefty,yes)}=1.568-0.713+1.456+0.056+1.595=3.962 \\] 1.6 效用函數 給定一個產品，比方說c(1,2,1,2)，你要如何計算這個產品對這100位受測者的效用呢？ 我們可以定義一個 效用函數 UT(pd)，用來計算產品pd對(100個)受測者的價值 UT = function(v) rowSums(W[, c(1, v + c(1,4,7,10))]) UT(c(1,2,1,2)) ## [1] 1.232 11.197 7.786 5.069 4.301 -0.818 0.754 4.065 3.338 3.980 4.379 4.548 ## [13] 1.107 -1.124 0.229 1.239 6.317 0.525 4.307 0.007 4.607 6.221 0.418 3.741 ## [25] 8.318 1.232 11.197 7.266 5.069 4.301 -0.818 0.754 4.065 3.338 4.113 4.332 ## [37] 4.294 1.265 -1.124 0.663 1.446 6.317 3.165 4.307 1.086 3.394 6.221 2.300 ## [49] -1.841 1.480 1.511 0.345 5.772 1.514 3.011 6.103 2.194 6.700 1.706 8.255 ## [61] 7.428 3.659 0.938 4.203 5.400 2.510 0.449 5.003 1.514 3.011 6.735 -0.324 ## [73] 1.232 11.197 7.786 5.069 4.301 -0.818 1.554 1.232 11.197 7.617 5.069 4.113 ## [85] 1.265 -1.124 2.535 1.446 6.317 4.182 7.111 0.354 4.307 1.903 4.607 5.672 ## [97] 2.211 4.978 4.451 4.504 1.7 市占率 如果我們有好幾個產品， 比方說 list(c(1,1,1,1), c(2,2,2,2), c(1,2,1,2), c(2,1,2,1)) : 你要如何比較這些產品的價值呢？ pds = list(c(1,1,1,1), c(2,2,2,2), c(1,2,1,2), c(2,1,2,1)) uts = sapply(pds, UT ) head(uts) ## [,1] [,2] [,3] [,4] ## [1,] 2.690 -0.568 1.232 0.890 ## [2,] 7.835 5.397 11.197 2.035 ## [3,] 6.738 1.986 7.786 0.938 ## [4,] 3.511 6.869 5.069 5.311 ## [5,] 2.401 9.101 4.301 7.201 ## [6,] 4.572 -1.618 -0.818 3.772 如果每一位消費者都購買對她最有價值的產品，這些產品的市占率分別是多大呢？ (tb = table(apply(uts, 1, which.max))) ## ## 1 2 3 4 ## 59 15 19 7 amPie(data.frame(label=names(tb), value=as.vector(tb)), inner_radius=50, depth=10, show_values=TRUE, legend=TRUE) "],
["newProd.html", "2 產品設計與定價策略 2.1 成本函數 2.2 價量關係、營收、獲利 SIM-1: 產品設計與定價策略 2.3 自動模擬 2.4 策略目標、策略優化 2.5 目標的範圍、合理的策略", " 2 產品設計與定價策略 假設你要推出一個全新的產品到一個新市場： 你要推出什麼規格的產品？ 你要訂什麼價格？ 給定「策略目標」，如何找到「最佳」的產品和價格策略？ 在多重策略目標之下，一個「合理」的策略需要有什麼條件？ 2.1 成本函數 設定每一個選項的成本 costs，然後定義一個成本函數 PC(pd) costs = list(bitter = c(0.3, 0.2, 0.1), variety = c(0.9, 0.5, 0.2), kind = c(0.5, 0.3, 0.6), arom = c(0.7, 0.4) ) PC = function(pd) { 2.5 + sum(sapply(1:length(att), function(i) costs[[i]][pd[i]] )) } PC(c(1,1,3,1)) ## [1] 5 2.2 價量關係、營收、獲利 給定 產品 與 價格，我們可以算出 銷售量 、 營收 、 獲利 和 滲透率 ： Given price \\(p\\), marginal cost \\(c\\), and respondent \\(i\\)’s utility (\\(u_i\\)): \\[ \\left\\{\\begin{matrix} q(p) = \\sum_i I(u_i &gt; p) &amp; quantity\\\\ r(p) = q(p) * p &amp; revenue\\\\ \\pi(p) = q(p) * (p - c) &amp; profit \\end{matrix}\\right. \\] 給定產品規格，我們可以在價格區間之中描出： 需求曲線: \\(q(p)\\) 營收曲線: \\(r(p)\\) 獲利曲線: \\(\\pi(p)\\) pqr = function(p, m, u) { q = sapply(p, function(x) sum(u &gt; x) ) pf = q * (p-m); ip = which.max(pf) r = q * p; ir = which.max(r) par(cex=0.7,mar=c(5,4,4,3)) plot(p,q,type=&#39;l&#39;,main=&quot;Demand Cruve&quot;,xlab=&quot;price&quot;,ylab=&quot;qty&quot;,ylim=c(0,80)) abline(v=p[ip],col=&#39;pink&#39;); abline(v=p[ir],col=&#39;cyan&#39;) abline(h=seq(20,80,20),lty=3,col=&#39;grey&#39;) plot(p, r, type=&#39;l&#39;,main=&quot;Revenue&quot;,ylab=&quot;&quot;,ylim=c(0,300),font.lab=2, xlab=sprintf(&quot;P = %.1f, Q = %d, R = %.1f, Pf = %.1f&quot;, p[ir], q[ir], r[ir], pf[ir] )) abline(v=p[ir],col=&#39;cyan&#39;); abline(h=seq(50,250,50),lty=3,col=&#39;grey&#39;) plot(p, pf, type=&#39;l&#39;,main=&quot;Profit&quot;,ylab=&quot;&quot;,ylim=c(0,110),font.lab=2, xlab=sprintf(&quot;P = %.1f, Q = %d, R = %.1f, Pf =%.1f&quot;, p[ip], q[ip], r[ip], pf[ip] ) ) abline(v=p[ip],col=&#39;pink&#39;); abline(h=seq(20,100,20),lty=3,col=&#39;grey&#39;) text(3.5,100,sprintf(&quot;MC = %.1f&quot;,m),pos=4,font=2) } 為了方便比較，我們把 產品效用的分佈 ，和需求曲線、營收曲線、獲利曲線畫在一起 pd1 = c(1,1,3,1) ut1 = UT(pd1) par(mfcol=c(2,2),cex=0.7,mar=c(5,3,4,3)) hist(ut1,-5:13,main=&quot;Distribution of Utility&quot;,xaxt=&#39;n&#39;,col=&#39;gray&#39;, border=&#39;white&#39;,xlab=&quot;Utility&quot;,ylab=&quot;&quot;,xlim=c(-4,14)) axis(1,at=seq(-4,14,2)) pqr(seq(3.5,11,0.1),PC(pd1),ut1) SIM-1: 產品設計與定價策略 我們可以把這段程式改成一個市場模擬器 sim1.R : source(&quot;sim1.R&quot;) 根據 APW (1.5)，什麼樣的產品規格和價格，會得到最佳的獲利呢? 試著使用模擬程式，找尋最佳的獲利和營收。 你找出來的結果，與用APW找出來的結果是相同的嗎？ 這個練習的策略意涵是什麼？ 2.3 自動模擬 我們還可以寫一段程式，把所有可能的產品(3x3x3x2=54)掃過一遍，把每一個可能產品的最佳營收和獲利都找出來，放在 X 這個矩陣裡面。 pds = as.matrix(expand.grid(1:3,1:3,1:3,1:2)) X = t(apply(pds, 1, function (v) { c = PC(v) u = UT(v) X = t( sapply(seq(3,10,0.1), function (p) { q = sum(u &gt; p) c(p, q, q * p, q * (p - c)) }) ) c(mean(u), c, X[which.max(X[,3]),], X[which.max(X[,4]),]) })) X = data.frame(cbind(pds,X)) colnames(X) = c(&#39;v1&#39;,&#39;v2&#39;,&#39;v3&#39;,&#39;v4&#39;, # product spec &#39;ut&#39;, # average utility of the product &#39;cost&#39;, # cost &#39;p1&#39;,&#39;q1&#39;,&#39;r1&#39;,&#39;pf1&#39;, # price, quantity, revenue, profit at max. revenue &#39;p2&#39;,&#39;q2&#39;,&#39;r2&#39;,&#39;pf2&#39; # price, quantity, revenue, profit at max. porfit ) head(X[order(- X$r1),],10) # order X by 最佳營收 ## v1 v2 v3 v4 ut cost p1 q1 r1 pf1 p2 q2 r2 pf2 ## 21 3 1 3 1 5.235 4.8 5.0 62 310.0 12.4 7.0 27 189.0 59.4 ## 19 1 1 3 1 5.572 5.0 3.9 74 288.6 -81.4 9.9 13 128.7 63.7 ## 3 3 1 1 1 4.619 4.7 4.5 64 288.0 -12.8 5.8 41 237.8 45.1 ## 1 1 1 1 1 4.956 4.9 4.2 66 277.2 -46.2 7.2 23 165.6 52.9 ## 2 2 1 1 1 4.573 4.8 3.7 72 266.4 -79.2 5.7 32 182.4 28.8 ## 20 2 1 3 1 5.189 4.9 4.3 61 262.3 -36.6 8.1 16 129.6 51.2 ## 23 2 2 3 1 4.609 4.5 5.6 46 257.6 50.6 6.6 33 217.8 69.3 ## 22 1 2 3 1 4.992 4.6 4.7 54 253.8 5.4 8.2 24 196.8 86.4 ## 24 3 2 3 1 4.655 4.4 4.7 54 253.8 16.2 8.5 19 161.5 77.9 ## 46 1 1 3 2 4.751 4.7 4.3 59 253.7 -23.6 7.5 20 150.0 56.0 head(X[order(- X$pf2),],10) # order X by 最佳獲利 ## v1 v2 v3 v4 ut cost p1 q1 r1 pf1 p2 q2 r2 pf2 ## 22 1 2 3 1 4.992 4.6 4.7 54 253.8 5.4 8.2 24 196.8 86.4 ## 49 1 2 3 2 4.171 4.3 5.1 47 239.7 37.6 8.9 17 151.3 78.2 ## 24 3 2 3 1 4.655 4.4 4.7 54 253.8 16.2 8.5 19 161.5 77.9 ## 51 3 2 3 2 3.833 4.1 5.2 44 228.8 48.4 7.0 25 175.0 72.5 ## 27 3 3 3 1 3.970 4.1 6.0 33 198.0 62.7 8.6 16 137.6 72.0 ## 23 2 2 3 1 4.609 4.5 5.6 46 257.6 50.6 6.6 33 217.8 69.3 ## 50 2 2 3 2 3.787 4.2 5.4 42 226.8 50.4 7.2 23 165.6 69.0 ## 54 3 3 3 2 3.149 3.8 5.6 28 156.8 50.4 6.7 23 154.1 66.7 ## 19 1 1 3 1 5.572 5.0 3.9 74 288.6 -81.4 9.9 13 128.7 63.7 ## 4 1 2 1 1 4.376 4.5 5.3 40 212.0 32.0 7.0 25 175.0 62.5 2.4 策略目標、策略優化 通常公司的目標都不只是將營收、獲利最大化這麼簡單。利用自動模擬的結果 X，請試著： 在不虧本的前提之下，產生最大營收 subset(X[order(- X$r1),], pf1&gt;0)[1:5,] ## v1 v2 v3 v4 ut cost p1 q1 r1 pf1 p2 q2 r2 pf2 ## 21 3 1 3 1 5.235 4.8 5.0 62 310.0 12.4 7.0 27 189.0 59.4 ## 23 2 2 3 1 4.609 4.5 5.6 46 257.6 50.6 6.6 33 217.8 69.3 ## 22 1 2 3 1 4.992 4.6 4.7 54 253.8 5.4 8.2 24 196.8 86.4 ## 24 3 2 3 1 4.655 4.4 4.7 54 253.8 16.2 8.5 19 161.5 77.9 ## 49 1 2 3 2 4.171 4.3 5.1 47 239.7 37.6 8.9 17 151.3 78.2 在滲透率大於30%的前提之下，將獲利最大化 subset(X[order(- X$pf2),], q2&gt;30)[1:5,] ## v1 v2 v3 v4 ut cost p1 q1 r1 pf1 p2 q2 r2 pf2 ## 23 2 2 3 1 4.609 4.5 5.6 46 257.6 50.6 6.6 33 217.8 69.3 ## 53 2 3 3 2 3.103 3.9 5.5 31 170.5 49.6 5.5 31 170.5 49.6 ## 3 3 1 1 1 4.619 4.7 4.5 64 288.0 -12.8 5.8 41 237.8 45.1 ## 5 2 2 1 1 3.993 4.4 4.6 50 230.0 10.0 5.6 32 179.2 38.4 ## 2 2 1 1 1 4.573 4.8 3.7 72 266.4 -79.2 5.7 32 182.4 28.8 現實的狀況是，你常常需要在目標不明確的狀況下做策略規劃： 請試著自己設定營運目標，找到實現這一個目標的最佳策略， 然後，跟大家分享你的目標和策略，和它們背後的邏輯。 最後再想看看，老闆為什麼常常不告訴你明確的目標，就叫你做策略規劃呢？ 2.5 目標的範圍、合理的策略 如果我們將 所有產品 的最佳營收和獲利一起畫在同一個平面上： df = data.frame(revenue=c(X$r1,X$r2),profit=c(X$pf1,X$pf2), p=c(X$p1,X$p2),q=c(X$q1,X$q2), opt=c(rep(&#39;opt.revenue&#39;,nrow(X)),rep(&#39;opt.profit&#39;,nrow(X))), lab=rep(apply(X[,1:4],1,paste0,collapse=&#39;&#39;),2) ) hchart(df, &quot;scatter&quot;, x=revenue, y=profit, group=opt, lab, p, q) %&gt;% hc_plotOptions(series=list(allowPointSelect=T)) %&gt;% hc_chart(zoomType = &quot;xy&quot;) %&gt;% hc_add_theme(hc_theme_flat()) %&gt;% hc_tooltip(headerFormat = &quot;&quot;,valueDecimals=1,borderWidth=2, hideDelay=100,useHTML=T,padding=3, pointFormat=&quot;&lt;center&gt;&lt;b&gt;({point.lab})&lt;/b&gt;&lt;/center&gt; price: {point.p}&lt;br&gt; qty: {point.q}&lt;br&gt; RV: {point.x}&lt;br&gt; PF: {point.y}&quot;) %&gt;% hc_colors(hex_to_rgba(c(&#39;darkgreen&#39;,&#39;orange&#39;), alpha = 0.65)) %&gt;% hc_legend(floating=T,align=&#39;left&#39;,verticalAlign=&#39;bottom&#39;) 根據這個圖： 請大家檢討一下你們的策略，你會想要調整你的策略嗎？如何調整呢？ 在多重目標的情境之下，什麼樣的策略才是合理的策略？合理的策略要有什麼條件呢？ 你可以圖中辨識出哪一些是產品是「合理」的嗎？ "],
["segment.html", "3 族群分析與市場區隔 3.1 族群分析 (K-means) 3.2 Average Part Worth per Segment (APWPS) SIM-2: 族群分析與市場區隔", " 3 族群分析與市場區隔 3.1 族群分析 (K-means) Within R, segmenatation is simply a function call set.seed(123) S = kmeans(W,3)$cluster table(S) ## S ## 1 2 3 ## 34 28 38 這裡的區隔變數是什麼？ 除此之外，還有哪一些常用的區隔變數呢？ 它們是最理想的區隔變數嗎？為什麼？ 3.2 Average Part Worth per Segment (APWPS) sapply(1:max(S), function(i) colMeans(W[S==i,])) ## [,1] [,2] [,3] ## intercept 4.46106 4.0602 2.36787 ## low 0.44326 0.2668 0.03905 ## medium 0.29612 -0.7620 -0.08003 ## high -0.73918 0.4952 0.04103 ## black -0.26476 -0.1239 1.94629 ## green 1.10582 0.4047 -1.19582 ## red -0.84115 -0.2808 -0.75058 ## bags -0.03909 -0.3239 0.63403 ## granu -0.40962 -2.0666 -0.45229 ## leafy 0.44915 2.3904 -0.18176 ## yes -0.08138 0.8737 0.51003 ## no 0.08138 -0.8737 -0.51003 APWPS的定義是什麼？ 它的策略意涵是什麼？ Let’s build a function Seg(k, seed) Seg = function(k, seed, seeding=F) { P = matrix(rep(0, k*4 ), ncol=4) U = matrix(rep(0, k*nrow(W)), ncol=k ) lx = c(1,2,2) for(i in 2:k) lx = c(lx, (i-1)*2 + c(1,2,2) ) h = rep.int(1,k) if(k==3) h[1]=2 else if(k&gt;=4) h[1]=3 layout(matrix(c(1,2,2,2+lx),k+1,3,byrow=T),heights=h ) sd = ifelse(seeding, sample.int(1000,1), seed) set.seed(sd) S = kmeans(W,k)$cluster n = as.vector(table(S)) # cat(k, &#39;segments, seed =&#39;, sd, &#39;, N =&#39;, n, &#39;\\n&#39;) m = apply(W[,2:ncol(W)], 2, function(x) tapply(x ,S, mean)) par(mar=c(2,1,2,1)) pie(table(S),radius=1,col=col1[1:k],font=2) dc = discrcoord(W, S)$proj[,1:2] par(mar=c(1,2,1,2)) plot(dc[,1],dc[,2],type=&#39;p&#39;,col=col1[S],pch=19,cex=1.5) for(i in 1:k) { par(mar=c(2,2,2,1)) barplot(m[i,],las=2,axes=F,axisnames=F,col=col1[i], width=.5,space=1,border=NA) abline(h=0, v=c(0,3,6,9,11)+0.25 ) P[i,1] = which.max(m[i,1:3]) P[i,2] = which.max(m[i,4:6]) P[i,3] = which.max(m[i,7:9]) P[i,4] = which.max(m[i,10:11]) U[,i] = rowSums(W[, c(1, P[i,]+c(1,4,7,10)) ]) mtx = sapply(1:k, function (k) sapply(-4:13, function(x) sum(U[S==k,i] &gt;= x &amp; U[S==k,i] &lt; x+1 )) ) mtx = t(as.matrix(mtx)) par(cex=0.6,mar=c(2,3,2,2)) barplot(mtx,las=2,ylim=c(0,30),col=col1) abline(h=seq(5,25,5),col=&#39;lightgrey&#39;,lty=3) z = paste(P[i,],collapse=&#39;, &#39;) text(0,28,sprintf(&quot;Produnt %d: {%s}, %.1f%%&quot;, i,z,100*n[i]/nrow(W)),cex=1.2,pos=4,col=col1[i]) }} As shown bloew, Seg(k, seed) makes k segments with seed, and plots: a pie charts that shown the propotions of segments a scatter chart that marks every respondents on the Reduced Product Attribute Space and for each segment: derive its corresponding APWPS defind a product with the Worthiest Parts, and draw the product’s Distribution of Utility, colored by segments Seg(3,779) SIM-2: 族群分析與市場區隔 在 RStudio 裡面，做模擬程式其實是很容易的： manipulate( Seg(k, 123, seeding), k = slider(2,5,2,step=1), seeding = button(&quot;Reset Seed&quot;) ) 試使用這個模擬程式，回答下列問題： 同一族群的消費者，是否會有相似的價值判斷呢？為甚麼？ 你可以從從儀錶板上面觀察到這種現象嗎？ 分別在\\(k=2,3\\)，找出你覺得最好的區隔？把seed記下來，大家來比看看。 從儀錶板上面，你如何判斷某一區隔的優劣呢？ 適合做產品設計的市場區隔，也會適合拿來做訂價策略、通路策略、媒體策略嗎？ 價值係數之外，受測者的人口統計或生活型態變數對我們的行銷策略會有什麼幫助？ 我們要如何利用這些資訊呢？ "],
["twoProd.html", "4 雙產品市場 4.1 價量關係 SIM-3: 雙產品市場模擬 4.2 競爭策略 4.3 產品線規劃 4.4 自動模擬 4.5 產品差異的重要性", " 4 雙產品市場 4.1 價量關係 Given products \\(j \\in \\left \\{ 1,2 \\right \\}\\), prices \\(p_j\\), costs \\(c_j\\), and respondent \\(i\\)’s utilities \\(u_{i,j}\\) : \\[ \\left\\{\\begin{matrix} q_j(p_j,p_{j&#39;}) = \\sum_i I(u_{i,j} &gt; p_j \\text{ and } u_{i,j} - p_j &gt; u_{i,j&#39;} - p_{j&#39;} ) &amp; quantity\\\\ r_j(p_j,p_{j&#39;}) = q_j(p_j,p_{j&#39;}) * p_j &amp; revenue\\\\ \\pi_j(p_j,p_{j&#39;}) = q_j(p_j,p_{j&#39;}) * (p_j - c_j) &amp; profit \\end{matrix}\\right. \\] 如果市場上有兩項產品 \\(j\\) and \\(j&#39;\\)，消費者 \\(i\\) 會購買產品 \\(j\\) 需要同時滿足兩個條件： 買 \\(j\\) 的剩餘大於 \\(0\\)： \\(u_{i,j} - p_j &gt; 0\\) 買 \\(j\\) 的剩餘大於買 \\(j&#39;\\) 的剩餘： \\(u_{i,j} - p_j &gt; u_{i,j&#39;} - p_{j&#39;}\\) 依照上面的公式，我們可以做出雙產品市場的儀表板： p1 = seq(4.5,10.5,0.1); p2 = seq(4.5,10.5,0.1) pd1 = c(1,1,3,1); pd2 = c(3,2,3,1) nm = mc1 = PC(pd1); mc2 = PC(pd2) u1 = UT(pd1); u2 = UT(pd2) x1 = 7.9; x2 = 6.5 s1 = u1 - x1; s2 = u2 -x2 dcs = rep(4, nrow(W)) dcs[s1 &gt; 0 &amp; s1 &gt; s2] = 1 dcs[s2 &gt; 0 &amp; s2 &gt; s1] = 2 dcs[s1 &gt; 0 &amp; s1 == s2] = 3 clr = c(&#39;magenta&#39;,&#39;blue&#39;,&#39;gold&#39;,&#39;gray&#39;) Profit = function (id, p, px, m, u, s2, nm, flag=F) { q = sapply(p, function(x) sum(u &gt; x &amp; u - x &gt; s2) ) pf = (p-m)*q pst = p[which.max(pf)] qx = sum(u &gt; px &amp; u - px &gt; s2) + 0.5*sum(u &gt; px &amp; u - px == s2) rx = qx * px pfx = qx * (px-m) par(cex=0.7,mar=c(3,3,3,2)) st = ifelse(id == 1, &quot;$\\\\pi_1(p_1|p_2)&quot;, &quot;$\\\\pi_2(p_2|p_1)&quot;) plot(p, pf, type=&#39;l&#39;,ylab=&quot;&quot;,ylim=c(0,100),xlab=&quot;&quot;, main=sprintf(&quot;PD: %s\\nProfit = %.1f @ %.1f (mc=%.1f)&quot;, nm[id],pfx,px,m), col.main=clr[id], cex.axis=0.8, cex.main=1) abline(v=px,col=clr[id]) abline(v=pst,col=&#39;green&#39;,lty=3,lwd=2) abline(h=c(20,40,60,80),col=&#39;lightgray&#39;,lty=2) text(max(p)-0.5, 103,TeX(sprintf(&quot;%.1f^*&quot;,pst)),pos=1,col=&#39;green&#39;,cex=1.1) text(min(p)+0.8, 103, TeX(st) ,pos=1,cex=1.2) if(flag) points(max(p)-0.6, 100, pch=19, col=&#39;green&#39;) return( c(pfx,rx,pst) ) } layout(matrix(c(1,2,3,4,4,5),3,2,byrow=F), widths=c(0.9,1.2),heights=c(1,1,1.2)) nm = sapply(list(pd1,pd2),paste0, collapse=&quot;&quot;) f1 = Profit(1, p1, x1, mc1, u1, s2, nm) f2 = Profit(2, p2, x2, mc2, u2, s1, nm) pene = 100 * sum(dcs!=4)/nrow(W) tpro = sum(dcs==1)*(x1 - mc1) + sum(dcs==2)*(x2 - mc2) trev = sum(dcs==1)*x1 + sum(dcs==2)*x2 tb = table(dcs) par(mar=c(3,3,4,3)) pie(tb,paste0(as.character(tb),&#39;%&#39;),col=clr[as.integer(names(tb))], main=sprintf(&quot;Panetration = %.1f%%&quot;,pene), cex.main=1.1,font=2,cex=1,border=&#39;white&#39;) par(mar=c(5,4,5,2)) plot(u1,u2,pch=20,col=clr[dcs],cex=2,cex.lab=1.2, xlab=TeX(&quot;$U_1$&quot;),ylab=TeX(&quot;$U_2$&quot;), main=sprintf(&quot;\\n\\nUtility Space\\nTotal Revenue (%.1f) &amp; Profit (%.1f)&quot;, trev,tpro),cex.main=1.1) abline(v=x1,col=clr[1]);abline(h=x2,col=clr[2]) lines(x=c(x1,x1+10),y=c(x2,x2+10),col=&#39;gray&#39;,lty=3,lwd=2) par(mar=c(3,4,3,2),cex=0.7) bp = cbind(c(f1[1],f1[2]-f1[1],0,0),c(0,0,f2[1],f2[2]-f2[1])) barplot(bp,names=c(&#39;prod-1&#39;,&#39;prod-2&#39;),main=&quot;Revenue &amp; Profit (Margin)&quot;, ylim=c(0,280),col=c(clr[1],&#39;pink&#39;,clr[2],&#39;cyan&#39;), cex.main=1.1,border=NA ) abline(h=seq(50,250,50),lty=3,col=&#39;gray&#39;) for(t in list(c(0.7,f1[1],f1[1]),c(0.7,f1[2],f1[2]), c(1.9,f2[1],f2[1]),c(1.9,f2[2],f2[2]) ) ) text(t[1],t[2]-10,t[3],font=2,pos=3) text(0.7,250,sprintf(&quot;(%.1f%%)&quot;,100*f1[1]/f1[2]),font=2,pos=3) text(1.9,250,sprintf(&quot;(%.1f%%)&quot;,100*f2[1]/f2[2]),font=2,pos=3) SIM-3: 雙產品市場模擬 source(&quot;sim3.R&quot;) 4.2 競爭策略 假如市場上有一個競爭產品 PD1=c(1,1,3,1)，它的價格設在$7.5 : 如果我們推出相同的產品，價格設在 $7.0，結果是？ 如果我們把價格升高到$7.4，結果會比較好嗎？ 如果我們賣$7.4，對手會如何回應呢？ 這個賽局最後的結果會是如何？ 如果兩個廠商的邊際成本不一樣，結果會是如何？ 這段練習有哪些的策略意涵？ 假如市場上有兩個競爭產品 PD1=c(3,3,3,2) &amp; PD2=c(1,3,3,2) : 均衡時雙方的營收和獲利是？ 假如你是PD1，在均衡的狀況之下你會想要調整價格嗎？你會調到什麼價格呢？ 假如你是PD2，你會如何回應PD1的價格調整呢？ 如果雙方的策略目標都是利潤最大化，結果是如何？ 如果PD1策略目標是市占率最大化，結果會一樣嗎？ 想看看，這段練習的策略意涵是什麼？ 最後我們做一個開放性的練習，假如市場上已有一個競爭產品 PD1=c(3,3,3,2) @ $7.5 : 你要用什麼產品和價格進入市場？為什麼？ 4.3 產品線規劃 假如你要在一個新市場(沒有競爭產品)裡面，規劃一條有兩個產品的產品線： 你的策略目標是什麼？ 你的產品規格、價格？ 營收、獲利、滲透率？ 你確定這是達成你的策略目標最好的策略嗎？你如何才能確定？ 4.4 自動模擬 4.4.1 價格空間 像新產品設計一樣，我們也可用自動模擬程式幫助我們規劃產品線。但是雙產品的市場比較複雜，兩個產品會有兩個價格，我們首先要確定： 兩產品互相競爭時的均衡價格 兩產品合作時的最佳價格 ### 4.2 pSpace = function(pd1, p1, pd2, p2) { mc1 = PC(pd1); mc2 = PC(pd2) u1 = UT(pd1); u2 = UT(pd2) q1 = q2 = f0 = f1 = f2 = matrix(rep(0, length(p1)*length(p2)), nrow=length(p1)) for(i in 1:length(p1)) for(j in 1:length(p2)) { s1= u1 - p1[i]; s2 = u2 - p2[j] q1[i,j] = sum( s1 &gt; 0 &amp; s1 &gt;= s2 ) q2[i,j] = sum( s2 &gt; 0 &amp; s1 &lt; s2 ) f1[i,j] = (p1[i]-mc1) * q1[i,j] f2[i,j] = (p2[j]-mc2) * q2[i,j] f0 = f1 + f2 } m0 = max(f0); w0 = which(f0 == max(f0), arr.ind = T) p1s = p1[w0[1]]; p2s = p2[w0[2]] par(mfcol=c(1,1),mar=c(5,5,3,4)) filled.contour(p1, p2, f0, color=terrain.colors, nlevels=8, plot.title=title(cex.main=1,family=&quot;serif&quot;,font=4, main=sprintf(&quot;Aggregate Profit over Price Space\\n( %s + %s )&quot;, paste0(pd1,collapse=&quot;&quot;),paste0(pd2,collapse=&quot;&quot;) ), xlab=TeX(&quot;$p_1^*$ (given. $p_2$)&quot;), ylab=TeX(&quot;$p_2^*$ (given. $p_1$)&quot;)), key.title=title(main=&quot;\\nTotal Profit&quot;,cex.main=0.8), key.axes=axis(4, cex.axis=0.8), plot.axes={ axis(1, cex.axis=0.8); axis(2, cex.axis=0.8) lines(p1[apply(f1,2,which.max)],p2,col=clr[1],lwd=2) lines(p1,p2[apply(f2,1,which.max)],col=clr[2],lwd=2) text(8.5,12,TeX(sprintf(&quot;$\\\\pi^*(%.1f,%.1f)=%.1f$&quot;,p1s,p2s,max(f0))),pos=1) points(p1s,p2s,pch=19) }) } pSpace(c(1,2,3,1),seq(4,12,0.1),c(3,2,3,1),seq(4,12,0.1)) 根據上圖：如果這兩個產品相互競爭，結果會是？ 那如果這兩個產品屬於同一家公司呢？ 4.4.2 產品組合 在這個例子裏面，總共有有多少可能的雙產品組合呢？ (3*3*3*2)*(3*3*3*2-1)/2 ## [1] 1431 想要把所有產品組合掃過一遍，需要花一點時間。 source(&#39;scan.R&#39;) 4.4.3 模擬結果 我們把模擬的結果之中，每一個產品組合的最佳的營收和獲利畫出來： load(&#39;df.Rdata&#39;) hchart(df,&quot;scatter&quot;,x=revenue,y=profit,group=opt,lab,p1,p2,q,radius=3) %&gt;% hc_plotOptions(series=list(allowPointSelect=T)) %&gt;% hc_chart(zoomType = &quot;xy&quot;) %&gt;% hc_add_theme(hc_theme_flat()) %&gt;% hc_tooltip(headerFormat = &quot;&quot;,valueDecimals=1,borderWidth=2, hideDelay=100,useHTML=T,padding=3, pointFormat=&quot;&lt;center&gt;{point.lab}&lt;/center&gt; Price: {point.p1},{point.p2}&lt;br&gt; Q&#39;ty: {point.q}&lt;br&gt; Rev.: {point.x}&lt;br&gt; Profit: {point.y}&quot;) %&gt;% hc_colors(hex_to_rgba(c(&#39;darkgreen&#39;,&#39;orange&#39;), alpha = 0.5)) %&gt;% hc_legend(floating=T,align=&#39;left&#39;,verticalAlign=&#39;bottom&#39;) 上圖裡面，有多少個策略是合理的呢？ 看到市場模擬的結果之後，你會想要調整你的策略目標嗎？如何調整？ 4.5 產品差異的重要性 我們把獲利最大的產品組合的獲利函數畫在價格平面上面： pSpace(c(1,2,3,1),seq(4,12,0.1),c(3,3,3,2),seq(4,12,0.1)) 在上面最佳的產品組合裡面，競爭和合作的均衡正好是相同的， 這種現象代表什麼？ 它的策略意涵是？ "],
["mLogit.html", "5 A mLogit CBC Example 5.1 The TV Dataset 5.2 Multinominal Logit Model 5.3 Regression (Interpolation) of Price Coefficients 5.4 Market Simulation QUIZ-6 市占率與價格彈性", " 5 A mLogit CBC Example 5.1 The TV Dataset The TV dataset is the outcome (part worths matrix for 352 respondent) of a mLogit CBC shared by SawTooth Software. There five attributes: Brand: JVC, RCA, Sony. It helps to evaluate brand equities Sound: Mono, Sterio, Sround. CB (Channel Block): nCB, CB PIP (Picture in Picture): nPIP, PIP Price: 300, 350, 400, 450. It helps to evaluate part worths in monetary unit. pw = read.csv(&quot;../tv/tv.csv&quot;) levels = names(pw) att = c(3,3,3,2,2,4) names(att) = c(&quot;Brand&quot;,&quot;Screen&quot;,&quot;Sound&quot;,&quot;CB&quot;,&quot;PIP&quot;,&quot;Price&quot;) levcol = c(1,1,1,2,2,2,3,3,3,4,4,5,5,6,6,6,6) apw = apply(pw,2,mean) ppw = 200 * apw[1:13]/(apw[14]-apw[17]) im = c(apw[3]-apw[1], apw[6]-apw[4], apw[9]-apw[7], apw[11]-apw[10], apw[13]-apw[12], apw[14]-apw[17]) im = 100 * im/sum(im) names(im) = names(att) par(mar=c(5,3,4,2),mfrow=c(1,3)) barplot(im,las=2,col=1:length(im),main=&quot;Attribute Importance (%)&quot;) abline(h=seq(5,25,5),lty=3,col=&#39;grey&#39;) barplot(apw,las=2,col=levcol,main=&quot;Part Worths (utils)&quot;) abline(h=seq(-1.5,1.0,0.5),lty=3,col=&#39;grey&#39;) barplot(ppw,las=2,col=levcol,main=&quot;Part Worths ($)&quot;,ylim=c(-120,100)) abline(h=seq(-100,100,50),lty=3,col=&#39;grey&#39;) 這個案例有兩個常用的重要屬性： 價格： 可以讓我們把 效用 轉成 貨幣 單位 品牌： 讓我們可以計算 品牌權益 跟JVC相比，消費者平均願意為SONY這個品牌多付多少錢呢？ 除了「功能」之外，我們可以把「情感」或「社會」性的屬性，也拿來用聯合分析做產品設計嗎？ 除了產品設計之外，你可以舉出聯合分析的其他應用嗎？ 你可以講出聯合分析的(全面性的)應用範圍嗎？ 5.2 Multinominal Logit Model In this CBC, the respondents’ part worths are estimated by Multinominal Logit model. mLogit is similar to Logistic, but it acts on target variables of more than two levels. As explained in 1.6, given a specific product, respondent’s utility is still the sum of part worths. 在 mLogit 模型裡面，我們一樣是用線性模型估計選項對每一位受測者的效用： pds = list(c(1,2,1,2,1,1),c(2,1,1,2,2,2),c(3,2,2,1,2,3),c(3,3,3,2,1,4)) ut = sapply(pds, function(pd) rowSums(pw[ pd + c(0,3,6,9,11,13) ])) head(ut) ## [,1] [,2] [,3] [,4] ## [1,] -0.135 -1.841 2.931 -0.427 ## [2,] -2.998 2.629 1.934 0.745 ## [3,] 0.473 0.928 -0.411 -1.518 ## [4,] 0.534 -0.563 1.148 -1.535 ## [5,] -5.063 -2.452 2.753 3.242 ## [6,] -3.593 -4.841 2.637 3.054 但是，我們不再假設消費者一定會選效用最高的產品，而是依據產品的相對價值，估計每一位受測者會購買各產品的機率。 受測者 \\(i\\) 會購買產品 \\(k\\) 的機率估計為： \\[ P_{i,k} = \\frac{exp(u_{i,k})}{\\sum_J exp(u_{i,j})} \\] 例如，第一位受測者買第一項產品的機率是： \\[ P_{1,1}=\\frac{e^{-0.135}}{e^{-0.135}+e^{-1.841}+e^{2.931}+e^{-0.427}} = 4.28\\% \\] 如果只有兩個產品，購買機率的公式會變成怎樣？ 那如果只有一個產品呢？ 接下來，我們用上面的公式把效用轉換成機率， pb = t(apply(ut, 1, function (u) exp(u)/sum(exp(u)) )) head(pb) ## [,1] [,2] [,3] [,4] ## [1,] 0.0427638 0.0077655 0.9175 0.03193 ## [2,] 0.0021753 0.6043557 0.3016 0.09185 ## [3,] 0.3199120 0.5042368 0.1322 0.04369 ## [4,] 0.3022983 0.1009287 0.5586 0.03818 ## [5,] 0.0001529 0.0020819 0.3793 0.61849 ## [6,] 0.0007815 0.0002244 0.3968 0.60216 把受測族群的機率加總起來，就是該族群對各產品的期望需求數量， (qty = colSums(pb) ) ## [1] 40.88 81.04 112.25 117.83 然後，再換算成各產品的市佔率： pcg = round(100 * qty/sum(qty),1) par(mar=c(1,2,1,2)) pie(pcg,paste0(1:4, &quot;: &quot;, pcg, &quot;%&quot;)) 5.3 Regression (Interpolation) of Price Coefficients 為了訂價的連續性，我們常常會需要對價格係數做迴歸(或內、外插)： #utP = function(p) { # if (p &gt;= 300 &amp; p &lt; 350) ((350-p)*pw$p300 + (p-300)*pw$p350)/50 # else if(p &gt;= 350 &amp; p &lt; 400) ((400-p)*pw$p350 + (p-350)*pw$p400)/50 # else if(p &gt;= 400 &amp; p &lt;= 450) ((450-p)*pw$p400 + (p-400)*pw$p450)/50 } p1 = c(300,350,400,450) coef = apply(pw[,14:17], 1, function(x) lm(ut~.,data.frame(ut=x,p1,p1^2,p1^3))$coef ) utP = function(p) t(coef) %*% c(1, p, p^2, p^3) 轉換函數utP()可以讓我們看到每一個受測者的價格敏感程度。 par(mar=c(3,4,1,3)) matplot(t(sapply(300:450,utP)[11:20,]),type=&#39;l&#39;) 有了轉換函數utP()， 就可以自由的預測不同價格之下的市占率。 pdp = list(c(1,2,1,2,1,325),c(2,1,1,2,2,399),c(3,2,2,1,2,410),c(3,3,3,2,1,450)) ut = sapply(pdp, function(x) rowSums(pw[ x[1:5] + c(0,3,6,9,11) ]) + utP(x[6])) pb = t(apply(ut, 1, function (u) exp(u)/sum(exp(u)) )) qty = colSums(pb) pcg = round(100 * qty/sum(qty),1) par(mar=c(1,2,1,2)) pie(pcg,paste0(1:4, &quot;: &quot;, pcg, &quot;%&quot;)) 5.4 Market Simulation 然後就可以進行多產品市場的模擬： # Define the marginal costs of parts costs = rbind(c(60,70,70),c(50,70,120),c(0,20,80),c(10,50,0),c(0,50,0)) MC = function(pd) sum(sapply(1:5, function(i) costs[i, pd[i]] )) # Define the market as a list of products pdp = list(c(1,2,2,1,2,0), c(2,1,1,2,2,300), c(3,2,2,1,2,350),c(3,3,3,2,1,400)) plst = seq(300,450) # Then we can simulate how the outcome varies with the price of the first product mx = sapply(plst, function(x) { pdp[[1]][6] = x ut = sapply(pdp, function(z) {rowSums(pw[ z[1:5] + c(0,3,6,9,11) ]) + utP(z[6])}) pb = t(apply(ut, 1, function (u) exp(u)/sum(exp(u)) )) qty = colSums(pb) 100 * qty / sum(qty) }) par(mfrow=c(1,2),cex=0.8) profit = mx[1,] * (plst - MC(pdp[[1]])) w = which.max(profit); pst=plst[w] plot(plst,mx[1,],type=&#39;l&#39;,col=1,ylim=c(0,45),main=&quot;Market Share&quot;, ylab=&quot;&quot;,xlab=&quot;Price&quot;) abline(v=pst,col=&#39;pink&#39; ) for(i in 2:nrow(mx)) lines(plst,mx[i,],col=i) plot(plst,profit,type=&#39;l&#39;,ylim=c(0,3000),ylab=&quot;&quot;,xlab=&quot;Price&quot;, main=sprintf(&quot;Profit (%.1f @ %d)&quot;,profit[w],pst)) abline(v=pst,col=&#39;pink&#39; ) 這裡我們可以觀察到 交叉價格彈性 的現象 黑色產品藉由降價所獲得的市占主要來自哪一個產品？ 為什麼？ QUIZ-6 市占率與價格彈性 source(&quot;sim4.R&quot;) "]
]
